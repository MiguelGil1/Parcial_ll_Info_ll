#include <Adafruit_NeoPixel.h>
#define LED_PIN 2
#define LED_COUNT 256

Adafruit_NeoPixel leds(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);
// C++ code
//

//PROTOTIPO DE FUNCIONES
void cleanMatrix();
void mostrarBandera();
//FIN DECLARACION PROTOTIPO DE FUNCIONES

//DELCARACION DE VARIABLES
int RedMatrix2D [16][16]= {
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20},
  {20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20}
};
int RedMatrix [256]= {
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
  20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20
};
int GreenMatrix2D [16][16] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} 
};
int GreenMatrix [256]= {
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
};

int BlueMatrix2D [16][16] = {
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255},
  {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255}
};

int BlueMatrix [256] = {
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
  255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
};
//FIN DECLARACION DE VARIABLES

void setup(){
  leds.begin();
  Serial.begin(9600); 
}

void loop(){
  /*for(int i = 0; i < LED_COUNT; i++){
    leds.setPixelColor(i,20,0,255);    
  }
  leds.show();
  delay(100);
  cleanMatrix();
  for(int i = 0; i < LED_COUNT; i+=2){
    leds.setPixelColor(i,20,0,255);    
  }
  leds.show();
  delay(100);
  cleanMatrix();
  for(int i = 0; i < LED_COUNT; i+=17){
    leds.setPixelColor(i,20,0,255);    
  }
  leds.show();
  delay(100);
  cleanMatrix();*/
  //mostrarBandera();
  //cleanMatrix();
  for(int i = 0; i < LED_COUNT; i++){
    leds.setPixelColor(i,RedMatrix[i],GreenMatrix[i],BlueMatrix[i]);
    Serial.print(i);
    Serial.print(").");
    Serial.print("{");
    Serial.print(RedMatrix[i]); 
    Serial.print(" , ");
    Serial.print(GreenMatrix[i]);
    Serial.print(" , ");
    Serial.print(BlueMatrix[i]);
    Serial.println("}");
  }
  Serial.print("\nSe termina de configurar la matriz");
  leds.show();
}

void mostrarBandera(){
  for(int i = 0; i < LED_COUNT; i++){
    leds.setPixelColor(i,RedMatrix[i],GreenMatrix[i],BlueMatrix[i]);
    Serial.print(i);
    Serial.print(").");
    Serial.print("{");
    Serial.print(RedMatrix[i]); 
    Serial.print(" , ");
    Serial.print(GreenMatrix[i]);
    Serial.print(" , ");
    Serial.print(BlueMatrix[i]);
    Serial.println("}");
  }
  Serial.print("\nSe termina de configurar la matriz");
  leds.show();
}

void cleanMatrix(){
  for(int i = 0; i < LED_COUNT; i++){
    leds.setPixelColor(i,0,0,0);    
  }
  leds.show(); 
}